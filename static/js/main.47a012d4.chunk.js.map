{"version":3,"sources":["components/Header/Header.js","components/SearchForm/SearchForm.js","components/Table/TableRow/TableRow.js","components/Table/Table.js","utils/API.js","App.js","index.js"],"names":["Header","id","className","SearchForm","props","value","onChange","handleInputChange","type","placeholder","name","TableRow","dob","Moment","format","src","image","alt","phone","email","Table","scope","onClick","handleSorting","employees","map","employee","picture","thumbnail","first","last","date","axios","get","App","event","target","setState","filterText","filteredEmployees","state","filter","toLowerCase","indexOf","filteredEmployee","getId","getAttribute","sortby","reverse","sortedEmployees","sort","a","b","this","getEmployees","API","then","res","data","results","catch","err","console","log","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47a012d4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\"\n\n\nfunction Header(){\n    return (\n        <section id =\"header\">\n            <div className = \"container-fluid\">\n                <div className = \"row justify-content-center d-flex\">\n                    <div className = \"header-text\">\n                        <h1>Employee Directory</h1>\n                        <p>Click on carrot to filter by heading or use the search box to narrow your result</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./SearchForm.css\"\n\nfunction SearchForm (props) {\n    return (\n        <div className = \"row search-form\">\n            <div className=\"col-md-6 offset-md-3\">\n                <form>\n                    <div className=\"form-group\">\n                        <input \n                            value = {props.value}\n                            onChange={props.handleInputChange}\n                            type=\"text\" \n                            className=\"form-control\" \n                            placeholder=\"Search\" \n                            name = \"employee\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchForm;","import React from \"react\";\nimport \"./TableRow.css\";\nimport Moment from \"moment\";\n\nfunction TableRow(props){\n  //use moment package to reformat date\n  const dob = Moment(props.dob).format(\"L\")\n  return (\n    <tr>\n      <td><img src = {props.image} alt = \"employee mugshot\"/></td>\n      <td>{props.name}</td>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n      <td>{dob}</td>\n    </tr>\n  )\n}\n\nexport default TableRow;","import React from \"react\";\nimport TableRow from \"./TableRow/TableRow\"\nimport \"./Table.css\"\n\nfunction Table(props) {\n    return (\n        <section id = \"table-form\">\n            <table>\n                <thead>\n                    <tr>\n                        <th scope=\"col\" id =\"image\" onClick = {props.handleSorting}>Image</th>\n                        <th scope=\"col\" id =\"name\" onClick = {props.handleSorting}><i className=\"fas fa-sort\" /> Name</th>\n                        <th scope=\"col\" id =\"phone\" onClick = {props.handleSorting}><i className=\"fas fa-sort\" /> Phone</th>\n                        <th scope=\"col\" id =\"email\" onClick = {props.handleSorting}><i className=\"fas fa-sort\" /> Email</th>\n                        <th scope=\"col\" id = \"dob\" onClick = {props.handleSorting}><i className=\"fas fa-sort\" /> DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* map the passed api response and pass it as props to each table rows */}\n                    {props.employees.map(employee =>(\n                        <TableRow\n                            image = {employee.picture.thumbnail}\n                            name = {`${employee.name.first} ${employee.name.last}`}\n                            phone = {employee.phone}\n                            email = {employee.email}\n                            dob = {employee.dob.date}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </section>\n    )\n}\n\nexport default Table;","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing randomly generated employees\n\nexport default {\n  getRandomEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=u\");\n  },\n};\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header.js\"\nimport SearchForm from \"./components/SearchForm/SearchForm.js\"\nimport Table from \"./components/Table/Table.js\"\nimport API from \"./utils/API.js\"\n\nclass App extends Component {\n    //set up class constructor that assign initial state\n    constructor(props) {\n        super(props);\n        this.state = {\n            employees : [],\n            filteredEmployee : [],\n            filterText : '',\n            sortby: ''\n        }; \n    }    \n\n    //when app is rendered for the first time, allt he employees will berendered to the DOM\n    componentDidMount() {\n        this.getEmployees();\n    }\n\n    //get the employees from the API call\n    getEmployees(){\n        API.getRandomEmployees()\n            //what comes back from the API\n            .then(res => {\n                this.setState({employees : res.data.results})\n                //allows for repopulation of table after search imput is deleted\n                this.setState({filteredEmployee: this.state.employees})\n            })\n            .catch(err => console.log(err));\n    }\n\n    //handle employee filter when letters goes into the input table\n    handleInputChange = event =>{\n        //get the value of search input\n        const value = event.target.value;\n\n        // Updating the input's state equal to input's value\n        this.setState({\n          filterText: value\n        });\n        \n        //filter the employee list by name based on the value of input text\n        let filteredEmployees = this.state.employees.filter(name => {\n            let employeeName = `${name.name.first} ${name.name.last}`;\n            return employeeName.toLowerCase().indexOf(this.state.filterText.toLowerCase()) >= 0\n        })\n\n        //set the state to the filtered employees\n        this.setState({\n            filteredEmployee: filteredEmployees\n        })\n\n    }\n\n    //handling sort employee by ascending or descending order \n    handleSorting = event => {\n        //sort based on the id of the table header\n        const getId = event.target.getAttribute(\"id\")\n\n        //if we clicked the id that has been selected, toggle the order\n        if(this.state.sortby === getId){\n            return this.setState({\n                //reverse() reverses the array in place so the first array element becomes the last, and the last array element becomes the first.\n                filteredEmployee : this.state.filteredEmployee.reverse(),\n                sortby : getId\n            })\n        }\n\n        //if it is different id, sort the employees\n        //start with the sort function and what do you want to sort the work out of it?\n        let sortedEmployees = this.state.employees.sort((a,b) =>{\n            //return different sorting based on the id of clicked table header\n            switch(getId){\n                case('name'):\n                    return a.name.first < b.name.first ? 1 : -1\n                case ('phone'): \n                    return a.phone < b.phone ? 1 : -1\n                case ('email'): \n                    return a.email < b.email ? 1 : -1\n                case ('dob'): \n                    return a.dob.date < b.dob.date ? 1 : -1\n            }\n\n        })\n\n        //set the ID to the currently selected category and populate the employee row state the sorted order\n        this.setState({\n            filteredEmployee : sortedEmployees,\n            sortby: getId\n        })\n\n    }\n\n    //render the tables and pass the states as props to each components\n    render() {\n        return(\n            <div>\n                <Header />\n                <SearchForm \n                    handleInputChange = {this.handleInputChange} \n                    value={this.state.filterText}\n                />\n                <Table employees = {this.state.filteredEmployee} handleSorting = {this.handleSorting}/>\n            </div>\n        )\n    }\n}\n  \nexport default App;\n  \n\n//work on this page first? so the data flows from top to bottom","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//render app\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}